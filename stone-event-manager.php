<?php

/*
Plugin Name: Stone Event Manager
Plugin URI: http://johnathonstone.com
Description: Promote your events in one place. Post to WordPress, Facebook, Google Calendar, and Twitter!
Version: 0.1.0
*/

/* Change log:
Vs 0.0.1	11/10/2016	Initial build.
Vs 0.0.2	11/10/2016	Moved the form HTML into the plugin.
Vs 0.0.3	11/10/2016	Created the event receiver.
Vs 0.0.4	11/10/2016	Implement PHP / HTML / MySQL santiziation.
Vs 0.1.0	11/11/2016	Prototype build complete!
*/

function sem_display_event_form() {
	// Displays the Event Creation Form.

	date_default_timezone_set('America/Chicago');	// Set the timezone.

	// Display the Event Creation Form.
	echo '
		<form action="/event-creation-confirmation/" method="POST">
			<div class="full-width">
				Event Title: <input name="title" type="text" />
			</div>
			<div class="full-width">
				Date: <input name="date" type="date" />
			</div>
			<div class="half-width">
				Start Time:	<input name="startTime" type="time" />
			</div>
			<div class="half-width">
				End Time:	<input name="endTime" type="time" />
			</div>
			<div class="full-width">
				Location:	<input name="location" type="text" />
			</div>
			<div class="full-width">
				Description: <textarea name="description"></textarea>
			</div>
			<input name="cne-submitted" type="submit" value="Create Event" />
		</form>
	';

	// Display the "Generated by" text for the plugin below the form.
	echo '
		<div style="display: block; font-size: smaller; padding: 16px 0 16px 0;">
			Form generated by <em>Stone Event Manager ' . sem_version() . '</em>
			at ' . date('h:i:sa') . '
		</div>
	';
}

function sem_execute_sql($sql) {
	// Executes a provided SQL query and returns the result.

	// Include wp-config to provide the database connection credentials.
	require_once(ABSPATH . 'wp-config.php');

	// Establish the connection to the WordPress database.
	$connection = mysql_connect($DB_HOST, $DB_USER, $DB_PASSWORD);

	// Select the WordPress database.
	mysql_select_db($DB_NAME);

	// Execute the query and save the results.
	$q = mysql_query($sql);

	// Close the database connection.
	mysql_close();

	// Return the results of the query.
	return $q;
}

function sem_event_receiver() {
	/* Receives the event information and performs several actions:
			- displays the user-submitted event details for confirmation.
			- creates a WordPress post for the event.
	*/

	// Get and sanitize the event creation form data.
	$title = strip_tags($_POST['title']);
	$date = strip_tags($_POST['date']);
	$startTime = strip_tags($_POST['startTime']);
	$endTime = strip_tags($_POST['endTime']);
	$location = strip_tags($_POST['location']);
	$description = strip_tags($_POST['description']);

	// Create the event details content for the WP post and confirmation page.
	$eventDetails = '
		<div style="display: block;">Title: ' . htmlspecialchars($title) . '</div>
		<div style="display: block;">Date: ' . htmlspecialchars($date) . '</div>
		<div style="display: block;">Start Time: ' . htmlspecialchars($startTime) . '</div>
		<div style="display: block;">End Time: ' . htmlspecialchars($endTime) . '</div>
		<div style="display: block;">Location: ' . htmlspecialchars($location) . '</div>
		<div style="display: block;">Description: ' . htmlspecialchars($description) . '</div>
	';

	// Populate the WordPress post array with the event information.
	$postarr = array(
		'post_content' => $eventDetails,
		'post_name' => $title,
		'post_status' => 'publish',
		'post_title' => $title
	);

	// Create the WordPress Post and determine success.
	$postCreated = wp_insert_post($postarr, true);
	$postCreationSuccessMessage = 'WordPress post created successfully!';
	$postCreationFailureMessage = 'Error creating WordPress post.';
	$postCreationMessage = '';

	// Tell the user whether the WordPress post was created or not.
	if($postCreated)
		$postCreationMessage = $postCreationSuccessMessage;
	else
		$postCreationMessage = $postCreationFailureMessage;

	// Tell the user if the event was created and confirm the details.
	echo '
		<div style="display: block;">
			<strong>Event created successfully!</strong>
		</div>
		<div style="display: block;">' . $postCreationMessage . '</div>
		<h3>Event Details:</h3>' . $eventDetails . '
	';
}

function sem_shortcode_form( $atts ) {
	// Display the Event Creation Form at shortcode [stone_event_manager_form].
	ob_start();
	sem_display_event_form();
	return ob_get_clean();
}

function sem_shortcode_receiver( $atts ) {
	/* Receive and process the event details at shortcode
		[stone_event_manager_receiver].	*/
	ob_start();
	sem_event_receiver();
	return ob_get_clean();
}

function sem_sql_test(){
	// Test function to retrieve and display SQL data.
	$sql = 'SELECT * FROM Blackbook';
	$q = sem_execute_sql($sql);

	while( $e = mysql_fetch_assoc($q) ) {
  	echo "<p>Record: " . $e['FName'] . " " . $e['LName'] . " " . $e['Phone'] . "</p>";
	};
}

function sem_version() {
	// Return current plugin version number.
	return '0.1.0';
}

add_shortcode( 'stone_event_manager_form', 'sem_shortcode_form' );
add_shortcode( 'stone_event_manager_receiver', 'sem_shortcode_receiver' );

?>
